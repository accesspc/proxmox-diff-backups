#!/bin/bash

echo "Proxmox VE 5.2 - differential backup support, v1.1"
echo "Robertas Reiciunas, https://reiciunas.lt/, accesspc@gmail.com"
echo " based on Kamil Trzcinski, http://ayufan.eu/, ayufan@ayufan.eu"
echo " modified and tested on pve-manager/5.2-5/eb24855a (running kernel: 4.13.16-2-pve)"
echo ""

function pve_manager_patch() {
cat <<"EOF"
diff --git a/js/pvemanagerlib.js b/js/pvemanagerlib.js
index 7a92574..d2bca5b 100644
--- a/js/pvemanagerlib.js
+++ b/js/pvemanagerlib.js
@@ -31473,6 +31473,25 @@
                value: 'snapshot',
                name: 'mode'
            },
+               {
+               xtype: 'numberfield',
+               fieldLabel: gettext('Max Backups'),
+               name: 'maxfiles',
+               minValue: 0,
+               maxValue: 365,
+               value: me.create ? '1' : undefined,
+               allowBlank: false
+               },
+               {
+               xtype: 'numberfield',
+               fieldLabel: gettext('Full Backup Every'),
+               name: 'fullbackup',
+               emptyText : gettext('Days'),
+               minValue: 0,
+               maxValue: 60,
+               value: me.create ? '0' : undefined,
+               allowBlank: true
+               },
            {
                xtype: 'proxmoxcheckbox',
                fieldLabel: gettext('Enable'),
EOF
}

function pve_perl_patch() {
cat <<"EOF"
diff --git a/LXC/Create.pm b/LXC/Create.pm
index c24bd80..451f7db 100644
--- a/LXC/Create.pm
+++ b/LXC/Create.pm
@@ -103,7 +103,15 @@
     push @$cmd, '--exclude' , './dev/*';

     if (defined($bwlimit)) {
-       $cmd = [ ['cstream', '-t', $bwlimit*1024], $cmd ];
+               $cmd = [ ['cstream', '-t', $bwlimit*1024], $cmd ];
+       }
+
+       if (my $fullbackup = PVE::Storage::get_full_backup($archive)) {
+               print "extracting from differential archive, using full backup '$fullbackup'\n";
+               $cmd = [
+                       [ "pve-xdelta3", "-q", "-d", "-c", "-R", "-s", $fullbackup, $archive ],
+                       [ @$userns_cmd, 'tar', 'xpf', '-', '--numeric-owner', '--totals', '--sparse', '-C', $rootdir, '--skip-old-files', '--anchored', '--exclude' , './dev/*' ]
+               ];
     }

     if ($archive eq '-') {
diff --git a/Storage.pm b/Storage.pm
index d72ed6d..f9286cd 100644
--- a/Storage.pm
+++ b/Storage.pm
@@ -496,7 +496,7 @@
        } elsif ($path =~ m!^$privatedir/(\d+)$!) {
            my $vmid = $1;
            return ('rootdir', "$sid:rootdir/$vmid");
-       } elsif ($path =~ m!^$backupdir/([^/]+\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo))$!) {
+    } elsif ($path =~ m!^$backupdir/([^/]+\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo|vcdiff|vcdiff\.gz|vcdiff\.lzo))$!) {
            my $name = $1;
            return ('iso', "$sid:backup/$name");
        }
@@ -782,7 +782,7 @@
                    $info = { volid => "$sid:vztmpl/$1", format => "t$2" };

                } elsif ($tt eq 'backup') {
-                   next if $fn !~ m!/([^/]+\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo))$!;
+                   next if $fn !~ m!/([^/]+\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo|vcdiff|vcdiff\.gz|vcdiff\.lzo))$!;

                    $info = { volid => "$sid:backup/$1", format => $2 };
                }
@@ -1336,13 +1336,30 @@
     }
 }

+sub get_full_backup {
+    my ($archive) = @_;
+    if ($archive =~ m!([^/]*vzdump-([a-z]*)-(\d*)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?$!) {
+        my $fullbackup = $archive;
+        $fullbackup =~ s!([^/]*vzdump-([a-z]+)-(\d+)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?!$1!;
+        return $fullbackup;
+    }
+    return undef;
+}
+
 sub extract_vzdump_config_tar {
     my ($archive, $conf_re) = @_;

     die "ERROR: file '$archive' does not exist\n" if ! -f $archive;

-    my $pid = open(my $fh, '-|', 'tar', 'tf', $archive) ||
-       die "unable to open file '$archive'\n";
+    my $pid;
+    my $fh;
+
+    if (my $fullbackup = get_full_backup($archive)) {
+        $pid = open($fh, '-|', 'bash', '-c' , "pve-xdelta3 -q -d -c -R -s '$fullbackup' '$archive' | tar tf -")
+            || die "unable to open file '$archive'\n";
+    } else {
+        $pid = open($fh, '-|', 'tar', 'tf', $archive) || die "unable to open file '$archive'\n";
+    }

     my $file;
     while (defined($file = <$fh>)) {
@@ -1365,7 +1382,15 @@
        $raw .= "$output\n";
     };

-    PVE::Tools::run_command(['tar', '-xpOf', $archive, $file, '--occurrence'], outfunc => $out);
+    my $cmd = ['tar', '-xpOf', $archive, $file, '--occurrence'];
+    if (my $fullbackup = get_full_backup($archive)) {
+        $cmd = [
+            [ "bash", "-c", "pve-xdelta3 -q -d -c -R -s '$fullbackup' '$archive' || true" ],
+            [ 'tar', '-xpOf', '-', $file, '--occurrence' ]
+        ];
+    }
+
+    PVE::Tools::run_command($cmd, outfunc => $out);

     return wantarray ? ($raw, $file) : $raw;
 }
diff --git a/QemuServer.pm b/QemuServer.pm
index d72ed6d..f9286cd 100644
--- a/QemuServer.pm
+++ b/QemuServer.pm
@@ -5344,8 +5344,18 @@

     die "ERROR: file '$archive' does not exist\n" if ! -f $archive;

+       my $cmd = undef;
+
+       if ($archive =~ m!([^/]*vzdump-([a-z]*)-(\d*)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?$!) {
+               my $fullbackup = $archive;
+               $fullbackup =~ s!([^/]*vzdump-([a-z]+)-(\d+)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?!$1!;
+               $cmd = "-|pve-xdelta3 -q -d -c -R -s '$fullbackup' '$archive' |tar t|";
+       } else {
+               $cmd = "-|tar tf '$archive'|";
+       }
+
     # try to detect archive type first
-    my $pid = open (my $fh, '-|', 'tar', 'tf', $archive) ||
+    my $pid = open (my $fh, $cmd) ||
        die "unable to open file '$archive'\n";
     my $firstfile = <$fh>;
     kill 15, $pid;
@@ -5692,6 +5702,16 @@
        $add_pipe->($cmd);
     }

+       if ($archive =~ m!([^/]*vzdump-([a-z]*)-(\d*)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(vma(\.(gz|lzo))?))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?$!) {
+               my $fullbackup = $archive;
+               $fullbackup =~ s!([^/]*vzdump-([a-z]+)-(\d+)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(vma(\.(gz|lzo))?))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?!$1!;
+               print "extracting from differential archive, using full backup '$fullbackup'\n";
+               $readfrom = '-';
+               my $qfullbackup = PVE::Tools::shellquote($fullbackup);
+               my $qarchive = PVE::Tools::shellquote($archive);
+               my $uncomp = "pve-xdelta3 -q -d -c -R -s '$qfullbackup' '$qarchive'|";
+       }
+
     my $tmpdir = "/var/tmp/vzdumptmp$$";
     rmtree $tmpdir;

@@ -5976,8 +5996,17 @@

     # tar option "xf" does not autodetect compression when read from STDIN,
     # so we pipe to zcat
-    my $cmd = "zcat -f|tar xf " . PVE::Tools::shellquote($archive) . " " .
-       PVE::Tools::shellquote("--to-command=$tocmd");
+       my $cmd = undef;
+
+       if ($archive =~ m!([^/]*vzdump-([a-z]*)-(\d*)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?$!) {
+               my $fullbackup = $archive;
+               $fullbackup =~ s!([^/]*vzdump-([a-z]+)-(\d+)-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.(tgz|(tar(\.(gz|lzo))?)))--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?!$1!;
+               print "extracting from differential archive, using full backup '$fullbackup'\n";
+               $cmd = "pve-xdelta3 -q -d -c -R -s '$fullbackup' '$archive' |tar x " . PVE::Tools::shellquote("--to-command=$tocmd");
+       } else {
+               $cmd = "zcat -f|tar xf " . PVE::Tools::shellquote($archive) . " " .
+               PVE::Tools::shellquote("--to-command=$tocmd");
+       }

     my $tmpdir = "/var/tmp/vzdumptmp$$";
     mkpath $tmpdir;
diff --git a/Storage/Plugin.pm b/Storage/Plugin.pm
index 6aa71e0..374bbcb 100644
--- a/Storage/Plugin.pm
+++ b/Storage/Plugin.pm
@@ -419,7 +419,7 @@
        return ('vztmpl', $1);
     } elsif ($volname =~ m!^rootdir/(\d+)$!) {
        return ('rootdir', $1, $1);
-    } elsif ($volname =~ m!^backup/([^/]+(\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo)))$!) {
+    } elsif ($volname =~ m!^backup/([^/]+(\.(tar|tar\.gz|tar\.lzo|tgz|vma|vma\.gz|vma\.lzo|vcdiff|vcdiff\.gz|vcdiff\.lzo)))$!) {
        my $fn = $1;
        if ($fn =~ m/^vzdump-(openvz|lxc|qemu)-(\d+)-.+/) {
            return ('backup', $fn, $2);
diff --git a/VZDump.pm b/VZDump.pm
index ffa7db8..3d6bf9a 100644
--- a/VZDump.pm
+++ b/VZDump.pm
@@ -8,6 +8,7 @@
 use IO::Select;
 use IPC::Open3;
 use File::Path;
+use File::Basename;
 use PVE::RPCEnvironment;
 use PVE::Storage;
 use PVE::Cluster qw(cfs_read_file);
@@ -171,6 +172,13 @@
        minimum => 1,
        default => 1,
     },
+    fullbackup => {
+    type => 'integer',
+    description => "Maximal days of validity for full backups to be used for creating differentials.",
+    optional => 1,
+    minimum => 0,
+    default => 0,
+    },
     remove => {
        type => 'boolean',
        description => "Remove old backup files if there are more than 'maxfiles' backup files.",
@@ -737,6 +745,22 @@

     return $bklist;
 }
+
+sub get_differential_backup_file_list {
+       my ($dir, $bkname, $exclude_fn) = @_;
+
+       my $bklist = [];
+       foreach my $fn (<$dir/${bkname}-*>) {
+               next if $exclude_fn && $fn eq $exclude_fn;
+               if ($fn =~ m!/(${bkname}--differential-(\d{4})_(\d{2})_(\d{2})-(\d{2})_(\d{2})_(\d{2})\.vcdiff(\.(gz|lzo))?)$!) {
+                       $fn = "$dir/$1"; # untaint
+                       my $t = timelocal ($7, $6, $5, $4, $3 - 1, $2 - 1900);
+                       push @$bklist, [$fn, $t];
+               }
+       }
+
+       return $bklist;
+}

 sub exec_backup_task {
     my ($self, $task) = @_;
@@ -785,14 +809,41 @@
                if scalar(@$bklist) >= $maxfiles;
        }

-       my $logfile = $task->{logfile} = "$opts->{dumpdir}/$basename.log";
-
        my $ext = $vmtype eq 'qemu' ? '.vma' : '.tar';
        my ($comp, $comp_ext) = compressor_info($opts);
        if ($comp && $comp_ext) {
            $ext .= ".${comp_ext}";
        }

+    my $fullbackup = undef;
+    if ($opts->{fullbackup} && !$opts->{stdout}) {
+        my $bklist = get_backup_file_list($opts->{dumpdir}, $bkname);
+        $bklist = [ sort { $b->[1] <=> $a->[1] } @$bklist ];
+        my $mintime = timelocal ($lt->sec, $lt->min, $lt->hour,
+        $lt->mday, $lt->mon, $lt->year) -
+        $opts->{fullbackup} * 24 * 60 * 60 -
+        12 * 60 * 60; # - 12h just to make sure that on last day we create full backup
+
+        foreach my $d (@$bklist) {
+        next if $mintime > $d->[1];
+
+        $fullbackup = $d->[0];
+        $basename = basename($fullbackup);
+        $basename = sprintf "${basename}--differential-%04d_%02d_%02d-%02d_%02d_%02d",
+            $lt->year + 1900, $lt->mon + 1, $lt->mday,
+            $lt->hour, $lt->min, $lt->sec;
+        $ext = ".vcdiff";
+
+        debugmsg ('info', "doing differential backup against '$fullbackup'");
+        last;
+        }
+
+        debugmsg ('info', "doing full backup, because no backup found in last $opts->{fullbackup} day(s)")
+        if !$fullbackup;
+    }
+
+    my $logfile = $task->{logfile} = "$opts->{dumpdir}/$basename.log";
+
        if ($opts->{stdout}) {
            $task->{tarfile} = '-';
        } else {
@@ -965,7 +1016,7 @@
        }

        debugmsg ('info', "creating archive '$task->{tarfile}'", $logfd);
-       $plugin->archive($task, $vmid, $task->{tmptar}, $comp);
+       $plugin->archive($task, $vmid, $task->{tmptar}, $comp, $fullbackup);

        rename ($task->{tmptar}, $task->{tarfile}) ||
            die "unable to rename '$task->{tmptar}' to '$task->{tarfile}'\n";
@@ -977,7 +1028,7 @@

        # purge older backup

-       if ($maxfiles && $opts->{remove}) {
+       if ($maxfiles && $opts->{remove} && !$fullbackup) {
            my $bklist = get_backup_file_list($opts->{dumpdir}, $bkname, $task->{tarfile});
            $bklist = [ sort { $b->[1] <=> $a->[1] } @$bklist ];

@@ -988,6 +1039,16 @@
                my $logfn = $d->[0];
                $logfn =~ s/\.(tgz|((tar|vma)(\.(gz|lzo))?))$/\.log/;
                unlink $logfn;
+
+        my $dbklist = get_differential_backup_file_list($opts->{dumpdir}, basename($d->[0]));
+
+        foreach my $df (@$dbklist) {
+            debugmsg ('info', "delete old differential backup '$df->[0]'", $logfd);
+            unlink $df->[0];
+            $logfn = $df->[0];
+            $logfn =~ s/\.(vcdiff(\.(gz|lzo))?)$/\.log/;
+            unlink $logfn;
+        }
            }
        }

diff --git a/VZDump/LXC.pm b/VZDump/LXC.pm
index e868505..f34328b 100644
--- a/VZDump/LXC.pm
+++ b/VZDump/LXC.pm
@@ -296,7 +296,7 @@
 }

 sub archive {
-    my ($self, $task, $vmid, $filename, $comp) = @_;
+    my ($self, $task, $vmid, $filename, $comp, $basefile) = @_;

     my $disks = $task->{disks};
     my @sources;
@@ -356,6 +356,7 @@

     my $bwl = $opts->{bwlimit}*1024; # bandwidth limit for cstream
     push @$cmd, [ 'cstream', '-t', $bwl ] if $opts->{bwlimit};
+    push @$cmd, [ 'pve-xdelta3', '-q', '-e', '-c', '-s', $basefile ] if $basefile;
     push @$cmd, [ split(/\s+/, $comp) ] if $comp;

     if ($opts->{stdout}) {
diff --git a/VZDump/QemuServer.pm b/VZDump/QemuServer.pm
index ccf4944..2d07438 100644
--- a/VZDump/QemuServer.pm
+++ b/VZDump/QemuServer.pm
@@ -237,7 +237,7 @@
 }

 sub archive {
-    my ($self, $task, $vmid, $filename, $comp) = @_;
+    my ($self, $task, $vmid, $filename, $comp, $basefile) = @_;

     my $conffile = "$task->{tmpdir}/qemu-server.conf";
     my $firewall = "$task->{tmpdir}/qemu-server.fw";
@@ -347,6 +347,15 @@
                die "unable to open file '$filename' - $!\n";
        }

+    if ($basefile) {
+        my $basecmd = "pve-xdelta3 -e -q -c -s '$basefile'";
+        if ($comp) {
+        $comp = "$basecmd|$comp";
+        } else {
+        $comp = $basecmd;
+        }
+    }
+
        my $outfileno;
        if ($comp) {
            my @pipefd = POSIX::pipe();
EOF
}

function patch_revert() {
        patch --reverse --quiet -p1 --batch --ignore-whitespace -d $*
}

function patch_apply() {
        patch --forward -p1 --batch --ignore-whitespace -d $*
}

case $1 in
revert)
        if pve_manager_patch | patch_revert /usr/share/pve-manager/ --dry-run
        then
                pve_manager_patch | patch_revert /usr/share/pve-manager/
                echo "RESTORED: /usr/share/pve-manager/"
        fi
        if pve_perl_patch | patch_revert /usr/share/perl5/PVE/ --dry-run
        then
                pve_perl_patch | patch_revert /usr/share/perl5/PVE/
                echo "RESTORED: /usr/share/perl5/PVE/"
        fi
        echo ""
        service pveproxy restart
        service pvedaemon restart
        ;;

apply)
        if pve_manager_patch | patch_apply /usr/share/pve-manager/ --dry-run --batch
        then
                pve_manager_patch | patch_apply /usr/share/pve-manager/
                echo "PATCHED: /usr/share/pve-manager/"
        fi
        if pve_perl_patch | patch_apply /usr/share/perl5/PVE/ --dry-run --batch
        then
                pve_perl_patch | patch_apply /usr/share/perl5/PVE/
                echo "PATCHED: /usr/share/perl5/PVE/"
        fi
        echo ""
        service pveproxy restart
        service pvedaemon restart
        ;;

test)
        pve_manager_patch | patch_apply /usr/share/pve-manager/ --dry-run --batch || true
        pve_perl_patch | patch_apply /usr/share/perl5/PVE/ --dry-run --batch || true
        ;;

*)
        echo "usage: $0 [apply|revert|test]"
        exit 1
        ;;
esac
